@model List<BookStore.Models.Book>

@{
    var pageNumber = (int)ViewData["PageNumber"]!;
    var pageSize = (int)ViewData["PageSize"]!;
    var totalItems = (int)ViewData["TotalItems"]!;
}

<div class="shop-toolbar with-sidebar mb--30">
    <div class="row align-items-center">
        <div class="col-lg-2 col-md-2 col-sm-6">
            <!-- Product View Mode -->
            <div class="product-view-mode">
                <a href="#" class="sorting-btn active" data-target="grid">
                    <i class="fas fa-th"></i>
                </a>
                <a href="#" class="sorting-btn" data-target="grid-four">
                    <span class="grid-four-icon">
                        <i class="fas fa-grip-vertical"></i><i class="fas fa-grip-vertical"></i>
                    </span>
                </a>
                <a href="#" class="sorting-btn" data-target="list ">
                    <i class="fas fa-list"></i>
                </a>
            </div>
        </div>
        <div class="col-xl-4 col-md-4 col-sm-6 mt--10 mt-sm--0">
            <span class="toolbar-status text-nowrap">
                Showing @((pageNumber - 1) * pageSize + 1) to @Math.Min(pageNumber * pageSize, totalItems) of @totalItems (@((int)Math.Ceiling(totalItems / (double)pageSize)) @((int)Math.Ceiling(totalItems / (double)pageSize) > 1 ? "Pages" : "Page"))
            </span>
        </div>
        <div class="col-lg-2 col-md-2 col-sm-6 mt--10 mt-md--0">
            <div class="sorting-selection">
                <span>Show:</span>
                <select id="page-size" class="form-control nice-select sort-select">
                    <option value="3" selected="@(pageSize == 3)">3</option>
                    <option value="9" selected="@(pageSize == 9)">9</option>
                    <option value="5" selected="@(pageSize == 5)">5</option>
                    <option value="10" selected="@(pageSize == 10)">10</option>
                    <option value="12" selected="@(pageSize == 12)">12</option>
                </select>
            </div>
        </div>
        <div class="col-lg-4 col-md-4 col-sm-6 mt--10 mt-md--0">
            <div class="sorting-selection">
                <span>Sort By:</span>
                <select id="sort-order" class="form-control nice-select sort-select mr-0">
                    <option value="" selected="@(ViewData["SortOrder"] as string == "")">Default Sorting</option>
                    <option value="name_asc" selected="@(ViewData["SortOrder"] as string == "name_asc")">Sort By: Name
                        (A - Z)
                    </option>
                    <option value="name_desc" selected="@(ViewData["SortOrder"] as string == "name_desc")">Sort By: Name
                        (Z - A)
                    </option>
                    <option value="price_asc" selected="@(ViewData["SortOrder"] as string == "price_asc")">Sort By:
                        Price (Low > High)
                    </option>
                    <option value="price_desc" selected="@(ViewData["SortOrder"] as string == "price_desc")">Sort By:
                        Price (High > Low)
                    </option>
                </select>
            </div>
        </div>
    </div>
</div>
<div class="shop-product-wrap grid with-pagination row space-db--30 shop-border">
    @if (Model.Any())
    {
        foreach (var book in Model)
        {
            <div class="col-lg-4 col-sm-6">
                <div class="product-card">
                    <div class="product-grid-content">
                        <div class="product-header">
                            <a href="#" class="author">
                                @book.Author
                            </a>
                            <h3><a href="/Home/ProductDetails/@book.BookId">@book.Title</a></h3>
                        </div>
                        <div class="product-card--body">
                            <div class="card-image">
                                <img src="@book.ImgURL" alt="@book.Title">
                                <div class="hover-contents">
                                    <a href="/Home/ProductDetails/@book.BookId" class="hover-image">
                                        <img src="@book.ImgURL" alt="@book.Title">
                                    </a>
                                    <div class="hover-btns">
                                        <a href="/Cart/AddToCart?bookId=@book.BookId&quantity=1" class="single-btn">
                                            <i class="fas fa-shopping-basket"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div class="price-block">
                                <span class="price">@book.Price.ToString("0.00") VND </span>
                                @* <del class="price-old">$@((book.Price * 1.2m).ToString("0.00"))</del> *@
                                <span class="price-discount">@book.Category.CategoryName</span>
                            </div>
                        </div>
                    </div>
                    <div class="product-list-content">
                        <div class="card-image">
                            <img src="@book.ImgURL" alt="@book.Title">
                        </div>
                        <div class="product-card--body">
                            <div class="product-header">
                                <a href="#" class="author">
                                    @book.Author
                                </a>
                                <h3><a href="/Home/ProductDetails/@book.BookId" tabindex="0">@book.Title</a></h3>
                            </div>
                            <article>
                                <h2 class="sr-only">Card List Article</h2>
                                <p>
                                    A quality book by @book.Author in
                                    the @(book.Category.CategoryName ?? "Uncategorized") category.
                                    Add this to your collection today! Currently @book.Stock items in stock.
                                </p>
                            </article>
                            <div class="price-block">
                                <span class="price">$@book.Price.ToString("0.00")</span>
                                <del class="price-old">$@((book.Price * 1.2m).ToString("0.00"))</del>
                                <span class="price-discount">20%</span>
                            </div>
                            <div class="btn-block">
                                <a href="/Cart/AddToCart?bookId=@book.BookId&quantity=1" class="btn btn-outlined">Add To
                                    Cart</a>
                                <a href="#" class="card-link"><i class="fas fa-heart"></i> Add To Wishlist</a>
                                <a href="#" class="card-link"><i class="fas fa-random"></i> Add To Compare</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12">
            <div class="alert alert-info">
                No books found matching your criteria. Try adjusting your filters.
            </div>
        </div>
    }
</div>
<!-- Pagination Block -->
<div class="row pt--30">
    <div class="col-md-12">
        <div class="pagination-block">
            <ul class="pagination-btns flex-center">
                <li>
                    <a href="javascript:void(0)" class="single-btn prev-btn" data-page="1">
                        |<i class="zmdi zmdi-chevron-left"></i>
                    </a>
                </li>
                <li>
                    <a href="javascript:void(0)" class="single-btn prev-btn" data-page="@Math.Max(1, pageNumber - 1)">
                        <i class="zmdi zmdi-chevron-left"></i>
                    </a>
                </li>

                @{
                    var totalPages = (int)Math.Ceiling(totalItems / (double)pageSize);
                    var startPage = Math.Max(1, pageNumber - 2);
                    var endPage = Math.Min(totalPages, startPage + 4);
                    if (endPage - startPage < 4 && totalPages > 4)
                    {
                        startPage = Math.Max(1, endPage - 4);
                    }
                }

                @for (var i = startPage; i <= endPage; i++)
                {
                    <li class="@(i == pageNumber ? "active" : "")">
                        <a href="javascript:void(0)" class="single-btn" data-page="@i">@i</a>
                    </li>
                }

                <li>
                    <a href="javascript:void(0)" class="single-btn next-btn"
                       data-page="@Math.Min(totalPages, pageNumber + 1)">
                        <i class="zmdi zmdi-chevron-right"></i>
                    </a>
                </li>
                <li>
                    <a href="javascript:void(0)" class="single-btn next-btn" data-page="@totalPages">
                        <i class="zmdi zmdi-chevron-right"></i>|
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>